[delayed_gcode report_temp]
initial_duration: 5
gcode:
  RESPOND PREFIX="ok" MSG="{"B:%.1f /%.1f T0:%.1f /%.1f" % (printer.heater_bed.temperature, printer.heater_bed.target, printer.extruder.temperature, printer.extruder.target)}"
  UPDATE_DELAYED_GCODE ID=report_temp DURATION=5

[gcode_macro test_start]
gcode:
  START_PRINT BED_TEMP=50 NOZZLE_TEMP=200
  PRIMING_STRIPE
  G0 X150 Y150 Z100

[gcode_macro start_print]
gcode:

  UPDATE_DELAYED_GCODE ID=motors_off DURATION=0

  M140 S{params.BED_TEMP} ; Nonblocking
  M104 S{params.NOZZLE_TEMP} ; Nonblocking

  G28
  BLTOUCH_DEBUG COMMAND=reset

  ; Split into separate macro to access current temperature
  CONTINUE_START_PRINT BED_TEMP={params.BED_TEMP} NOZZLE_TEMP={params.NOZZLE_TEMP}

[gcode_macro continue_start_print]
gcode:

  {% if printer.extruder.temperature < printer.extruder.target - 25 or printer.heater_bed.temperature < printer.heater_bed.target - 5 %}
    G0 X150 Y200 Z100 F5000 ; Z up to check nozzle
  {% endif %}

  M190 S{params.BED_TEMP} ; Blocking
  M109 S{params.NOZZLE_TEMP} ; Blocking

  BED_MESH_TILT

[gcode_macro priming_stripe]
gcode:

  SAVE_GCODE_STATE NAME=startup
  M204 S200
  G92 E0.0 ; zero extruder
  M83 ; relative extruder
  G1 X0 Y0 Z5 F6000 ; off the bed
  G1 X0 Y0 Z0.5 F5000 ; lower
  G1 X0 Y10 Z0.1 E12 F200 ; purge bubble
  G1 Y50 E9 F2000 ; draw 1st half of line
  G1 Y100 E9 F2000 ; draw 2nd half of line
  G1 X3 Y100.0 E1 F200 ; move to side
  G1 Z0.02 ; smoosh
  G1 X3 Y50 E2 F1500 ; wipe
  G1 E-0.75 F5000 ; retract filament
  RESTORE_GCODE_STATE NAME=startup

[delayed_gcode motors_off]
gcode:
  M18 ; motors off
  M107 ; part fan off

[gcode_macro finish_print]
gcode:

  {% set min_temp = 190 %}
  {% set fan_off_temp = 100 %}
  {% set end_temp = printer.extruder.temperature %}
  {% set target_temp = ([end_temp, 190] | max) %}
  {% set homed = printer.toolhead.homed_axes == 'xyz' %}
  {% set purge = end_temp > 170 and homed %}

  G92 E0.0 ; zero extruder
  M83 ; relative extruder
  M140 S0 ; bed heater off

  {% if purge %}
    M104 S{ target_temp }
  {% endif %}
  {% if homed %}
    ; small initial withdrawal
    G0 Z{ ([printer.gcode_move.gcode_position.z + 10, 380] | min) } F6000
  {% endif %}
  {% if purge %}
    M109 S{ target_temp }  ; waits
    G0 X150 Y300 Z{ ([printer.gcode_move.gcode_position.z + 100, 380] | min) } E10 F6000
  {% else %}
    M106 S255 ; fan on blast before move
    G0 X150 Y300 Z{ ([printer.gcode_move.gcode_position.z + 100, 380] | min) } F6000
  {% endif %}
  
  TURN_OFF_HEATERS 

  UPDATE_DELAYED_GCODE ID=motors_off DURATION=15

[gcode_macro fix]
gcode:
  SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
  SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1

[gcode_macro heat_extruder]
gcode:
  {% if printer.extruder.target < 190 %}
    M104 S190
  {% endif %}

[gcode_macro ensure_homed]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

# Separate macro so other macros can change the target
[gcode_macro wait_for_hotend]
gcode:
  M109 S{printer.extruder.target} ; wait until hot end is at temp

[gcode_macro wait_for_bed]
gcode:
  M190 S{printer.heater_bed.target} ; wait until bed is at temp

[gcode_macro loadunload_preamble]
gcode:
  HEAT_EXTRUDER
  ENSURE_HOMED
  SAVE_GCODE_STATE NAME=loadunload
  G90 ; absolute positioning
  G0 X150 Y150 Z150 F5000  ; center
  G0 Z160 ; wiggle to show the command was received
  G0 Z150
  WAIT_FOR_HOTEND
  G0 Z160 ; wiggle to show start of actual operation
  G0 Z150
  M83

[gcode_macro unload]
gcode:
  LOADUNLOAD_PREAMBLE
  G0 E15 F150 ; extrude 15mm
  G0 E-100 F500 ; retract 100mm
  RESTORE_GCODE_STATE NAME=loadunload

[gcode_macro unload_tpu]
gcode:
  LOADUNLOAD_PREAMBLE
  G0 E15 F150 ; extrude 15mm
  G0 E-100 F150 ; retract 100mm
  RESTORE_GCODE_STATE NAME=loadunload

[gcode_macro load]
gcode:
  LOADUNLOAD_PREAMBLE
  G0 E100 F300
  RESTORE_GCODE_STATE NAME=loadunload

[gcode_macro simple_load]
gcode:
  HEAT_EXTRUDER
  WAIT_FOR_HOTEND
  G0 E100 F300

[gcode_macro load_tpu]
gcode:
  LOADUNLOAD_PREAMBLE
  G0 E100 F150
  G0 E50 F150
  RESTORE_GCODE_STATE NAME=loadunload

[gcode_macro attended_reload]
gcode:
  UNLOAD
  G4 P60000
  LOAD

[gcode_macro z_series]
variable_increment: 0
variable_iteration: 0
gcode:
  SAVE_GCODE_STATE NAME=z_series
  SET_GCODE_OFFSET Z={params.START}
  SET_GCODE_VARIABLE MACRO=z_series VARIABLE=increment VALUE={params.INCREMENT}
  SET_GCODE_VARIABLE MACRO=z_series VARIABLE=iteration VALUE=0

[gcode_macro z_series_advance]
gcode:
  {% if printer["gcode_macro z_series"].increment %}
    {% if printer["gcode_macro z_series"].iteration > 0 %}
      SET_GCODE_OFFSET Z_ADJUST={printer["gcode_macro z_series"].increment}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=z_series VARIABLE=iteration VALUE={printer["gcode_macro z_series"].iteration + 1}
    GET_POSITION
  {% endif %}

[gcode_macro z_series_terminate]
gcode:
  {% if printer["gcode_macro z_series"].increment %}
    SET_GCODE_VARIABLE MACRO=z_series VARIABLE=increment VALUE=0
    RESTORE_GCODE_STATE NAME=z_series
  {% endif %}

[gcode_macro prepare_to_pause]
variable_x: 0
variable_y: 0
variable_z: 0
gcode:
  SAVE_GCODE_STATE NAME=pause
  SET_GCODE_VARIABLE MACRO=prepare_to_pause VARIABLE=x VALUE={printer.gcode_move.position.x}
  SET_GCODE_VARIABLE MACRO=prepare_to_pause VARIABLE=y VALUE={printer.gcode_move.position.y}
  SET_GCODE_VARIABLE MACRO=prepare_to_pause VARIABLE=z VALUE={printer.gcode_move.position.z}
  G90 ; absolute positioning
  G0 E-1 ; retract filament
  G0 X150 Y300 Z280 F5000 ; raise head and evert build plate

[gcode_macro recover_from_pause]
gcode:
  G0 E10 ; squirt
  G4 P30000 ; pause 30 seconds
  G0 X{printer["gcode_macro prepare_to_pause"].x} Y{printer["gcode_macro prepare_to_pause"].y} F5000
  G0 Z{printer["gcode_macro prepare_to_pause"].z}
  RESTORE_GCODE_STATE NAME=pause

[gcode_macro start_probe_calibrate]
gcode:
  {% if printer.heater_bed.target < 40 %}
    M140 S60
  {% endif %}
  HEAT_EXTRUDER
  ENSURE_HOMED
  WAIT_FOR_HOTEND
  WAIT_FOR_BED
  G0 X150 Y150 Z15 F5000
  PROBE_CALIBRATE

[gcode_macro abort_probe_calibrate]
gcode:
  M104 S0
  M140 S0
  ABORT
  G0 X150 Y150 Z100

[gcode_macro accept_probe_calibrate]
gcode:
  M104 S0
  M140 S0
  ACCEPT
  G0 X150 Y150 Z100

[gcode_macro reset_pressure_advance]
gcode:
  SET_PRESSURE_ADVANCE ADVANCE={printer.configfile.config["extruder"]["pressure_advance"]}
